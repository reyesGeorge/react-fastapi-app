{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"max\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${theme.palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    border: `2px solid ${theme.palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  };\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    max = 5,\n    spacing = 'medium',\n    total,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let clampedMax = max < 2 ? 2 : max;\n\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, {\n      ownerState: ownerState,\n      className: classes.avatar,\n      style: {\n        marginLeft\n      },\n      variant: variant,\n      children: [\"+\", extraAvatars]\n    }) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"sources":["/Users/georgereyes/react-fastapi/react_fastapi_app/node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","isFragment","clsx","chainPropTypes","unstable_composeClasses","composeClasses","styled","useThemeProps","Avatar","avatarClasses","avatarGroupClasses","getAvatarGroupUtilityClass","jsxs","_jsxs","SPACINGS","small","medium","useUtilityClasses","ownerState","classes","slots","root","avatar","AvatarGroupRoot","name","slot","overridesResolver","props","styles","theme","border","palette","background","default","boxSizing","marginLeft","display","flexDirection","AvatarGroupAvatar","AvatarGroup","forwardRef","inProps","ref","children","childrenProp","className","max","spacing","total","variant","other","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","totalAvatars","length","Math","min","maxAvatars","extraAvatars","undefined","style","slice","reverse","map","cloneElement","propTypes","node","object","string","number","Error","oneOfType","oneOf","sx","arrayOf","func","bool"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"max\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${theme.palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${theme.palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    max = 5,\n    spacing = 'medium',\n    total,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let clampedMax = max < 2 ? 2 : max;\n\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, {\n      ownerState: ownerState,\n      className: classes.avatar,\n      style: {\n        marginLeft\n      },\n      variant: variant,\n      children: [\"+\", extraAvatars]\n    }) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"]},"metadata":{},"sourceType":"module"}