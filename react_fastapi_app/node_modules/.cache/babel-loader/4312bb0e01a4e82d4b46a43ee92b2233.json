{"ast":null,"code":"var _jsxFileName = \"/Users/georgereyes/react-fastapi/react_fastapi/src/components/meals/Meals.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, CardContent, Stack, Typography } from '@mui/material';\nimport React from 'react';\nimport Header from '../header/Header';\nimport './Meals.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//   <MealCard name={meal.Name} protein={meal.Protein} carbs={meal.Carbs} fats={meal.Fats} fetchMeals={fetchMeals}></MealCard>\nfunction Meals() {\n  _s();\n\n  const [meals, setMeals] = React.useState([]);\n\n  const fetchMeals = async () => {\n    const response = await fetch(\"http://localhost:8000/meals\");\n    const meals = await response.json();\n    setMeals(meals.data);\n    console.log(meals.data);\n  };\n\n  React.useEffect(() => {\n    fetchMeals();\n  }, []);\n  const MealsContext = /*#__PURE__*/React.createContext({\n    meals: [],\n    fetchMeals: () => {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MealsContext.Provider, {\n      value: {\n        meals,\n        fetchMeals\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 5,\n        children: meals.map(meal => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"height2\",\n          sx: {\n            minWidth: 275\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: meal.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Protein: \", meal.Protein, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), \"Carbs: \", meal.Carbs, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), \"Fats: \", meal.Fats]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meals, \"an3554G5PYiaii/PlvHt6YA7hZs=\");\n\n_c = Meals;\nexport default Meals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meals\");","map":{"version":3,"sources":["/Users/georgereyes/react-fastapi/react_fastapi/src/components/meals/Meals.tsx"],"names":["Card","CardContent","Stack","Typography","React","Header","Meals","meals","setMeals","useState","fetchMeals","response","fetch","json","data","console","log","useEffect","MealsContext","createContext","map","meal","minWidth","Name","Protein","Carbs","Fats"],"mappings":";;;AAAA,SAAiBA,IAAjB,EAAoCC,WAApC,EAAiDC,KAAjD,EAAwDC,UAAxD,QAA0E,eAA1E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,aAAP;;;AASA;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;;AACA,QAAMC,UAAU,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,UAAML,KAAK,GAAG,MAAMI,QAAQ,CAACE,IAAT,EAApB;AACAL,IAAAA,QAAQ,CAACD,KAAK,CAACO,IAAP,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACO,IAAlB;AACH,GALD;;AAMAV,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClBP,IAAAA,UAAU;AACb,GAFD,EAEG,EAFH;AAGA,QAAMQ,YAAY,gBAAGd,KAAK,CAACe,aAAN,CAAoB;AACrCZ,IAAAA,KAAK,EAAE,EAD8B;AAC1BG,IAAAA,UAAU,EAAE,MAAM,CAAG;AADK,GAApB,CAArB;AAKA,sBAEI;AAAA,4BAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAF;AAASG,QAAAA;AAAT,OAA9B;AAAA,6BAEA,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,kBAEFH,KAAK,CAACa,GAAN,CAAWC,IAAD,iBAER,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,SAAhB;AAA0B,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAA9B;AAAA,iCACA,QAAC,WAAD;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAC,KAAnC;AAAA,wBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,OAApB;AAAA,sCACcF,IAAI,CAACG,OADnB,eAEI;AAAA;AAAA;AAAA;AAAA,sBAFJ,aAGYH,IAAI,CAACI,KAHjB,eAII;AAAA;AAAA;AAAA;AAAA,sBAJJ,YAKWJ,IAAI,CAACK,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAFE;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuCH;;GAxDQpB,K;;KAAAA,K;AA0DT,eAAeA,KAAf","sourcesContent":["import { Button, Card, CardActions, CardContent, Stack, Typography } from '@mui/material';\nimport React from 'react';\nimport Header from '../header/Header';\nimport './Meals.css';\n\n\ninterface MealType {\n    Name: string;\n    Protein: string;\n    Carbs: number;\n    Fats: number;\n  }\n//   <MealCard name={meal.Name} protein={meal.Protein} carbs={meal.Carbs} fats={meal.Fats} fetchMeals={fetchMeals}></MealCard>\n\nfunction Meals() {\n\n    const [meals, setMeals] = React.useState([])\n    const fetchMeals = async () => {\n        const response = await fetch(\"http://localhost:8000/meals\")\n        const meals = await response.json()\n        setMeals(meals.data)\n        console.log(meals.data)\n    }\n    React.useEffect(() => {\n        fetchMeals()\n    }, [])\n    const MealsContext = React.createContext({\n        meals: [], fetchMeals: () => { }\n    })\n\n\n    return (\n\n        <div>\n            {/* # HEADER COMPONENT */}\n            <Header></Header>\n            <h2>Hello</h2>\n            <MealsContext.Provider value={{ meals, fetchMeals }}>\n\n            <Stack spacing={5}>\n        {\n          meals.map((meal: MealType) => (\n            \n            <Card className=\"height2\" sx={{ minWidth: 275 }} >\n            <CardContent>\n                <Typography variant=\"h5\" component=\"div\">\n                    {meal.Name}\n                </Typography>\n                <Typography variant=\"body2\">\n                    Protein: {meal.Protein}\n                    <br />\n                    Carbs: {meal.Carbs}\n                    <br />\n                    Fats: {meal.Fats}\n    \n                </Typography>\n            </CardContent>\n        </Card>\n            \n            \n          ))\n        }\n\n                \n                </Stack>\n\n            </MealsContext.Provider>\n        </div>\n    )\n\n}\n\nexport default Meals;"]},"metadata":{},"sourceType":"module"}